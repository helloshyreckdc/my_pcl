#include <iostream>
#include <pcl/point_cloud.h>
#include <pcl_conversions/pcl_conversions.h>
#include <pcl/io/pcd_io.h>
#include <pcl/point_types.h>
#include <pcl/registration/icp.h>
#include <pcl/console/parse.h>
#include <pcl/visualization/pcl_visualizer.h>
#include <ros/ros.h>
#include <std_msgs/String.h>

void handlePointCallback(const pcl::PCLPointCloud2ConstPtr& cloud)
{
	ROS_INFO("Succeed!");
}


int main(int argc, char **argv)
{
	ros::init(argc, argv, "publish_target_tf");
	ros::NodeHandle n;

	ros::Subscriber sub = n.subscribe("camera/depth/points", 10000, handlePointCallback);

	ros::Rate loop_rate(0.2);

	while(ros::ok())
	{

	
	ros::spinOnce();

	loop_rate.sleep();
	}
	return 0;

}
